#include <iostream>
#include <vector>
#include <string>
using namespace std;

const int SIZE = 50;

int hash1(string key) {
    int sum = 0;
    for (char c : key) sum += c;
    return sum % SIZE;
}

int hash2(string key) {
    int sum = 0;
    for (int i = 0; i < key.size(); i++) sum += (i + 1) * key[i];
    return sum % SIZE;
}

int hash3(string key) {
    int sum = 0;
    for (char c : key) sum += c * c;
    return sum % SIZE;
}

int main() {
    vector<int> bloom(SIZE, 0);
    int n;
    cout << "How many words to insert in Bloom Filter? ";
    cin >> n;

    for (int i = 0; i < n; i++) {
        string word;
        cout << "Enter word " << i + 1 << ": ";
        cin >> word;
        bloom[hash1(word)] = 1;
        bloom[hash2(word)] = 1;
        bloom[hash3(word)] = 1;
    }

    cout << "\nHow many words to search? ";
    int m;
    cin >> m;
    for (int i = 0; i < m; i++) {
        string query;
        cout << "Enter search word " << i + 1 << ": ";
        cin >> query;
        if (bloom[hash1(query)] && bloom[hash2(query)] && bloom[hash3(query)])
            cout << query << " might be present.\n";
        else
            cout << query << " is definitely not present.\n";
    }

    return 0;
}
